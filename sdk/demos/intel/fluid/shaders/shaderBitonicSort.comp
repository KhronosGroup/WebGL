#version 310 es
precision mediump float;
layout(local_size_x = 512, local_size_y = 1, local_size_z = 1) in;

void GroupMemoryBarrierWithGroupSync() {
  memoryBarrierShared();
  barrier();
}

struct Grid {
  int grid;
};

layout(std140, binding = 1) uniform CB {
  int g_iLevel;
  int g_iLevelMask;
  int g_iWidth;
  int g_iHeight;
}
cb;

layout(std140, binding = 3) buffer Data {
  Grid data[];
}
data;

shared int shared_data[512];

void main() {
  shared_data[gl_LocalInvocationIndex] =
      data.data[gl_GlobalInvocationID.x].grid;
  GroupMemoryBarrierWithGroupSync();
  for (int j = cb.g_iLevel >> 1; j > 0; j >>= 1) {
    int result = ((shared_data[gl_LocalInvocationIndex & uint(~j)] <=
                   shared_data[gl_LocalInvocationIndex | uint(j)]) ==
                  bool((uint(cb.g_iLevelMask) & gl_GlobalInvocationID.x)))
                     ? shared_data[gl_LocalInvocationIndex ^ uint(j)]
                     : shared_data[gl_LocalInvocationIndex];
    GroupMemoryBarrierWithGroupSync();
    shared_data[gl_LocalInvocationIndex] = result;
    GroupMemoryBarrierWithGroupSync();
  }
  data.data[gl_GlobalInvocationID.x].grid =
      shared_data[gl_LocalInvocationIndex];
}
