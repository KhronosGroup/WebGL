#version 310 es
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void GroupMemoryBarrierWithGroupSync() {
  memoryBarrierShared();
  barrier();
}

struct Grid {
  int grid;
  int padding1;
  int padding2;
  int padding3;
};

layout(std140, binding = 1) uniform Cb {
  int g_iLevel;
  int g_iLevelMask;
  int g_iWidth;
  int g_iHeight;
}
cb;

layout(std140, binding = 3) buffer InputData {
  readonly Grid data[];
}
inputData;

layout(std140, binding = 4) buffer TempData {
  Grid data[];
}
tempData;

shared int transpose_shared_data[256];

void main() {
  uint ID =
      gl_GlobalInvocationID.y * uint(cb.g_iWidth) + gl_GlobalInvocationID.x;
  transpose_shared_data[gl_LocalInvocationIndex] = inputData.data[ID].grid;
  GroupMemoryBarrierWithGroupSync();
  uvec2 XY = gl_GlobalInvocationID.yx - gl_LocalInvocationID.yx +
             gl_LocalInvocationID.xy;
  uint CID = XY.y * uint(cb.g_iHeight) + XY.x;
  uint DID = gl_LocalInvocationID.x * 16u + gl_LocalInvocationID.y;
  tempData.data[CID].grid = transpose_shared_data[DID];
}
