<?xml version="1.0" encoding="UTF-8"?>
<proposal href="proposals/EXT_shader_texture_lod/">
  <name>EXT_shader_texture_lod</name>
  <contact> <a href="https://www.khronos.org/webgl/public-mailing-list/">WebGL
  working group</a> (public_webgl 'at' khronos.org) </contact>

  <contributors>
    <contributor>Vladimir Vukicevic (vladimir 'at' mozilla.com)</contributor>
    <contributor>Florian Boesch (pyalot 'at' gmail.com)</contributor>
    <contributor>Members of the WebGL working group</contributor>
  </contributors>

  <number>25</number>

  <depends>
    <api version="1.0"/>
  </depends>

  <overview>
    <mirrors href="http://www.khronos.org/registry/gles/extensions/EXT/EXT_shader_texture_lod.txt"
             name="EXT_shader_texture_lod">
    </mirrors>

    <features>
      <feature>
            This extension adds additional texture functions to the
            OpenGL ES Shading Language which provide the shader writer
            with explicit control of LOD.
      </feature>
      <glsl extname="EXT_shader_texture_lod">
        <stage type="fragment"/>
        <function name="texture2DLodEXT" type="vec4">
          <param name="sampler" type="sampler2D" />
          <param name="coord" type="vec2" />
          <param name="lod" type="float" />
        </function>
        <function name="texture2DProjLodEXT" type="vec4">
          <param name="sampler" type="sampler2D" />
          <param name="coord" type="vec3" />
          <param name="lod" type="float" />
        </function>
        <function name="texture2DProjLodEXT" type="vec4">
          <param name="sampler" type="sampler2D" />
          <param name="coord" type="vec4" />
          <param name="lod" type="float" />
        </function>
        <function name="textureCubeLodEXT" type="vec4">
          <param name="sampler" type="samplerCube" />
          <param name="coord" type="vec3" />
          <param name="lod" type="float" />
        </function>
        <function name="texture2DGradExt" type="vec4">
          <param name="sampler" type="sampler2D" />
          <param name="P" type="vec2" />
          <param name="dPdx" type="vec2" />
          <param name="dPdy" type="vec2" />
        </function>
        <function name="texture2DProjGradExt" type="vec4">
          <param name="sampler" type="sampler2D" />
          <param name="P" type="vec3" />
          <param name="dPdx" type="vec2" />
          <param name="dPdy" type="vec2" />
        </function>
        <function name="texture2DProjGradExt" type="vec4">
          <param name="sampler" type="sampler2D" />
          <param name="P" type="vec4" />
          <param name="dPdx" type="vec2" />
          <param name="dPdy" type="vec2" />
        </function>
        <function name="textureCubeGradExt" type="vec4">
          <param name="sampler" type="samplerCube" />
          <param name="P" type="vec3" />
          <param name="dPdx" type="vec3" />
          <param name="dPdy" type="vec3" />
        </function>
      </glsl>
    </features>
  </overview>
  
  <idl xml:space="preserve">
    interface EXT_shader_texture_lod {
    };
  </idl>

  <samplecode xml:space="preserve">
    <pre>
    #extension GL_EXT_shader_texture_lod : enable
    #extension GL_OES_standard_derivatives : enable

    uniform sampler2D myTexture;
    varying vec2 texcoord;

    void main(){
        // avoids artifacts when wrapping texture coordinates
        gl_FragColor = texture2DGradExt(myTexture, mod(texcoord, vec2(0.1, 0.5)), dFdx(texcoord), dFdy(texcoord));
    }
    </pre>
  </samplecode>

  <history>
    <revision date="2014/2/10">
      <change>Initial revision.</change>
    </revision>
  </history>
</proposal>
