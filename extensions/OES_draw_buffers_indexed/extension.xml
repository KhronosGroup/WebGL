<?xml version="1.0" encoding="UTF-8"?>
<draft href="OES_draw_buffers_indexed/">
  <name>OES_draw_buffers_indexed</name>

  <contact> <a href="https://www.khronos.org/webgl/public-mailing-list/">WebGL
  working group</a> (public_webgl 'at' khronos.org) </contact>

  <contributors>
    <contributor>Alexey Knyazev</contributor>
    <contributor>Members of the WebGL working group</contributor>
  </contributors>

  <number>45</number>

  <depends>
    <api version="2.0"/>
  </depends>

  <overview>
    <mirrors href="https://www.khronos.org/registry/OpenGL/extensions/OES/OES_draw_buffers_indexed.txt"
             name="OES_draw_buffers_indexed">
             <addendum>Core WebGL <a href="https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.15">blend factors limitation</a>
              is also applied to the new entrypoints.
             </addendum>
             <addendum>
              When <code>CONSTANT_COLOR</code> or <code>ONE_MINUS_CONSTANT_COLOR</code> are used as blend color factors of an active draw buffer and
              <code>CONSTANT_ALPHA</code> or <code>ONE_MINUS_CONSTANT_ALPHA</code> are used as blend color factors of another active draw buffer,
              any draw call will generate an <code>INVALID_OPERATION</code> error.
             </addendum>
    </mirrors>

    <features>
      <feature>This extension provides the ability to independently enable or disable blending, set the blend equations,
      set the blend functions, and set the color write masks per color output.</feature>
    </features>
  </overview>

  <idl xml:space="preserve">
[NoInterfaceObject]
interface OES_draw_buffers_indexed {
  void enableiOES(GLenum target, GLuint index);

  void disableiOES(GLenum target, GLuint index);

  void blendEquationiOES(GLuint buf, GLenum mode);

  void blendEquationSeparateiOES(GLuint buf,
                                 GLenum modeRGB, GLenum modeAlpha);

  void blendFunciOES(GLuint buf,
                     GLenum src, GLenum dst);

  void blendFuncSeparateiOES(GLuint buf,
                             GLenum srcRGB, GLenum dstRGB,
                             GLenum srcAlpha, GLenum dstAlpha);

  void colorMaskiOES(GLuint buf,
                     GLboolean r, GLboolean g, GLboolean b, GLboolean a);

  [WebGLHandlesContextLoss] GLboolean isEnablediOES(GLenum target, GLuint index);
};
  </idl>

  <newfun>
    <function name="enableiOES" type="void">
      <param name="target" type="GLenum"/>
      <param name="index" type="GLuint"/>
      <p>
        Enables blending for an individual draw buffer.
      </p>
      <p>
        <code>target</code> must be <code>BLEND</code>.
      </p>
      <p>
        <code>index</code> is an integer <code>i</code> specifying the draw buffer associated with
        the symbolic constant <code>DRAW_BUFFER<em>i</em></code>.
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="disableiOES" type="void">
      <param name="target" type="GLenum"/>
      <param name="index" type="GLuint"/>
      <p>
        Disables blending for an individual draw buffer.
      </p>
      <p>
        <code>target</code> must be <code>BLEND</code>.
      </p>
      <p>
        <code>index</code> is an integer <code>i</code> specifying the draw buffer associated with
        the symbolic constant <code>DRAW_BUFFER<em>i</em></code>.
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="blendEquationiOES" type="void">
      <param name="buf" type="GLuint"/>
      <param name="mode" type="GLenum"/>
      <p>
        The <code>buf</code> argument is an integer <code>i</code> that indicates that the blend equations
        should be modified for <code>DRAW_BUFFER<em>i</em></code>.
      </p>
      <p>
        <code>mode</code> accepts the same tokens as <code>mode</code> in <code>blendEquation</code>.
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="blendEquationSeparateiOES" type="void">
      <param name="buf" type="GLuint"/>
      <param name="modeRGB" type="GLenum"/>
      <param name="modeAlpha" type="GLenum"/>
      <p>
        The <code>buf</code> argument is an integer <code>i</code> that indicates that the blend equations
        should be modified for <code>DRAW_BUFFER<em>i</em></code>.
      </p>
      <p>
        <code>modeRGB</code> and <code>modeAlpha</code> accept the same tokens as <code>modeRGB</code>
        and <code>modeAlpha</code> in <code>blendEquationSeparate</code>.
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="blendFunciOES" type="void">
      <param name="buf" type="GLuint"/>
      <param name="src" type="GLenum"/>
      <param name="dst" type="GLenum"/>
      <p>
        The <code>buf</code> argument is an integer <code>i</code> that indicates that the blend functions
        should be modified for <code>DRAW_BUFFER<em>i</em></code>.
      </p>
      <p>
        <code>src</code> and <code>dst</code> accept the same tokens as <code>src</code> and
        <code>dst</code> in <code>blendFunc</code>.
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="blendFuncSeparateiOES" type="void">
      <param name="buf" type="GLuint"/>
      <param name="srcRGB" type="GLenum"/>
      <param name="dstRGB" type="GLenum"/>
      <param name="srcAlpha" type="GLenum"/>
      <param name="dstAlpha" type="GLenum"/>
      <p>
        The <code>buf</code> argument is an integer <code>i</code> that indicates that the blend functions
        should be modified for <code>DRAW_BUFFER<em>i</em></code>.
      </p>
      <p>
        <code>srcRGB</code>, <code>dstRGB</code>, <code>srcAlpha</code>, and <code>dstAlpha</code> accept the same
        tokens as <code>srcRGB</code>, <code>dstRGB</code>, <code>srcAlpha</code>, and <code>dstAlpha</code> parameters in
        <code>blendEquationSeparate</code>.
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="colorMaskiOES" type="void">
      <param name="buf" type="GLuint"/>
      <param name="r" type="GLboolean"/>
      <param name="g" type="GLboolean"/>
      <param name="b" type="GLboolean"/>
      <param name="a" type="GLboolean"/>
      <p>
        The <code>buf</code> argument is an integer <code>i</code> that indicates that the write mask
        should be modified for <code>DRAW_BUFFER<em>i</em></code>.
      </p>
      <p>
        <code>r</code>, <code>g</code>, <code>b</code>, and <code>a</code> indicate whether R, G, B, or A
        values, respectively, are written or not (a value of TRUE means that the corresponding value is written).
      </p>
    </function>
  </newfun>

  <newfun>
    <function name="isEnablediOES" type="GLboolean">
      <param name="target" type="GLenum"/>
      <param name="index" type="GLuint"/>
      <p>
        Returns whether blending is enabled for a given draw buffer.
      </p>
      <p>
        <code>target</code> must be <code>BLEND</code>.
      </p>
      <p>
        <code>index</code> is an integer <code>i</code> specifying the draw buffer associated with
        the symbolic constant <code>DRAW_BUFFER<em>i</em></code>.
      </p>
    </function>
  </newfun>

  <newtok>
    <function name="getIndexedParameter" type="">
      <param name="target" type="GLenum"/>
      <param name="index" type="GLuint"/>
      <p>
        New allowed <code>target</code> tokens and their return types are given in the following table.
      </p>
      <p>
        <table class="foo">
          <tr><th>target</th><th>returned type</th></tr>
          <tr><td>BLEND_EQUATION_RGB</td><td>GLenum</td></tr>
          <tr><td>BLEND_EQUATION_ALPHA</td><td>GLenum</td></tr>
          <tr><td>BLEND_SRC_RGB</td><td>GLenum</td></tr>
          <tr><td>BLEND_SRC_ALPHA</td><td>GLenum</td></tr>
          <tr><td>BLEND_DST_RGB</td><td>GLenum</td></tr>
          <tr><td>BLEND_DST_ALPHA</td><td>GLenum</td></tr>
          <tr><td>COLOR_WRITEMASK</td><td>sequence&lt;GLboolean&gt; (with 4 values)</td></tr>
        </table>
      </p>
      <p>
        <code>index</code> is an integer <code>i</code> specifying the draw buffer associated with
        the symbolic constant <code>DRAW_BUFFER<em>i</em></code>.
      </p>
    </function>
  </newtok>

  <issues>
    Describe interaction with <code>WEBGL_blend_equation_advanced_coherent</code>.
  </issues>

  <history>
    <revision date="2019/01/24">
      <change>First draft.</change>
    </revision>
    <revision date="2019/01/30">
      <change>Fixed typos.</change>
    </revision>
    <revision date="2019/09/25">
      <change>Promoted to Draft.</change>
    </revision>
    <revision date="2020/03/05">
      <change>Added WebGL-specific limitations, renamed to <code>OES_draw_buffers_indexed</code>.</change>
    </revision>
  </history>
</draft>
